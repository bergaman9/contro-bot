version: '3.8'

services:
  contro-bot:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile.arm64
    container_name: contro-bot
    restart: unless-stopped
    environment:
      - BOT_ENV=production
      - MEMORY_LIMIT=1G
      - CPU_LIMIT=2.0
      - PYTHONUNBUFFERED=1
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - MONGODB_URI=${MONGODB_URI}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
    volumes:
      - ../../logs:/app/logs
      - ../../resources:/app/resources
      - ./configs:/app/configs
    ports:
      - "8000:8000"  # API server
      - "8080:8080"  # Health check
      - "9090:9090"  # Metrics
    depends_on:
      - mongodb
      - redis
    networks:
      - contro-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongodb:
    image: mongo:7.0-jammy
    container_name: contro-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=contro-bot-db
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/mongod.conf:/etc/mongod.conf
    ports:
      - "27017:27017"
    networks:
      - contro-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: contro-redis
    restart: unless-stopped
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - contro-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  nginx:
    image: nginx:alpine
    container_name: contro-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/ssl/certs
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - contro-bot
    networks:
      - contro-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  prometheus:
    image: prom/prometheus:latest
    container_name: contro-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - contro-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  grafana:
    image: grafana/grafana:latest
    container_name: contro-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - contro-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  contro-network:
    driver: bridge 