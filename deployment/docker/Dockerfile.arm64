# Raspberry Pi 5 optimized Dockerfile for ARM64 - Security Enhanced
FROM python:3.11-slim-bookworm

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Update system and install security patches with latest updates
RUN apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y

# Install system dependencies for ARM64
RUN apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libffi-dev \
    libnacl-dev \
    python3-dev \
    build-essential \
    pkg-config \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libtiff5-dev \
    libopenjp2-7-dev \
    libcairo2-dev \
    libpango1.0-dev \
    libgdk-pixbuf2.0-dev \
    shared-mime-info \
    curl \
    wget \
    git \
    nano \
    htop \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies with security updates
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir --upgrade -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/resources /app/temp

# Set permissions
RUN chmod +x /app/scripts/*.sh || true

# Create non-root user for security
RUN groupadd -r botuser && useradd -r -g botuser -s /bin/bash botuser
RUN chown -R botuser:botuser /app
USER botuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose ports
EXPOSE 8000 8080 9090

# Default command
CMD [" python\, \main.py\, \--mode\, \main\]
