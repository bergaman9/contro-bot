#!/bin/bash

# CONTRO Bot - Git Pre-Commit Hook
# Automatically tracks changes and suggests version updates

echo "üîç CONTRO Bot - Pre-commit version check..."

# Check if we're in the bot directory
if [ ! -f "main.py" ] || [ ! -d "cogs" ]; then
    echo "‚ö†Ô∏è  Not in bot directory, skipping version check"
    exit 0
fi

# Check for significant changes that might warrant a version bump
CHANGED_FILES=$(git diff --cached --name-only)
SIGNIFICANT_CHANGES=false

# Check for changes in critical files
for file in $CHANGED_FILES; do
    case $file in
        cogs/*.py)
            echo "üìù Modified cog: $file"
            SIGNIFICANT_CHANGES=true
            ;;
        main.py)
            echo "üìù Modified main bot file: $file"
            SIGNIFICANT_CHANGES=true
            ;;
        requirements.txt)
            echo "üìù Modified dependencies: $file"
            SIGNIFICANT_CHANGES=true
            ;;
        utils/*.py)
            echo "üìù Modified utility: $file"
            SIGNIFICANT_CHANGES=true
            ;;
        config/*.json)
            echo "üìù Modified configuration: $file"
            ;;
    esac
done

# If significant changes detected, suggest version update
if [ "$SIGNIFICANT_CHANGES" = true ]; then
    echo ""
    echo "üéØ Significant changes detected!"
    echo "üí° Consider creating a new version after this commit:"
    echo "   Use the Discord command: /create_version"
    echo "   Or run: python -c \"from utils.version.version_manager import get_version_manager; get_version_manager().add_version('patch', ['Your changes here'])\""
    echo ""
fi

# Check if version files are properly formatted
if [ -f "data/versions.json" ]; then
    if ! python -m json.tool data/versions.json > /dev/null 2>&1; then
        echo "‚ùå versions.json is not valid JSON!"
        exit 1
    fi
fi

if [ -f "config/version_config.json" ]; then
    if ! python -m json.tool config/version_config.json > /dev/null 2>&1; then
        echo "‚ùå version_config.json is not valid JSON!"
        exit 1
    fi
fi

echo "‚úÖ Pre-commit checks passed"
exit 0
